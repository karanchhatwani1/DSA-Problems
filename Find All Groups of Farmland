//Find All Groups of Farmland

class Solution {
public:
    bool inBound(int row, int col, int n, int m){
        if(row >= 0 && col >= 0 && row < n && col < m){
            return true;
        }

        return false;
    }
    vector<vector<int>> findFarmland(vector<vector<int>>& land) {
        int n = land.size();
        int m = land[0].size();

        vector<vector<int>> vis(n, vector<int> (m, 0));
        queue<pair<int, int>> q;
        int dx[] = {1, 0, -1, 0};
        int dy[] = {0, 1, 0, -1};

        vector<vector<int>> ans;

        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(vis[i][j] == 1 || land[i][j] == 0){
                    continue;
                }

                q.push({i, j});
                vis[i][j] = 1;

                int l, r;
                
                while(!q.empty()){
                    int a = q.front().first;
                    int b = q.front().second;
                    l = a;
                    r = b;

                    q.pop();

                    for(int k = 0; k < 4; k++){
                        int newR = a + dx[k];
                        int newC = b + dy[k];

                        if(inBound(newR, newC, n, m) && vis[newR][newC] == 0 && land[newR][newC] ==1){
                            q.push({newR, newC});
                            vis[newR][newC] = 1;
                        }
                    }

                    if(q.size() == 0){
                        ans.push_back({i, j, l, r});
                    }
                }
            }
        }

        return ans;
    }
};
