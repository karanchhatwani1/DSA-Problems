//Number of Islands

class Solution {
public:
    void dfs(vector<vector<char>> &grid, int row, int col, vector<vector<int>> &vis, int n, int m){
        if(row < 0 || col < 0 || row >= n || col >= m || vis[row][col] == 1 || grid[row][col] == '0'){
            return;
        }

        vis[row][col] = 1;
        int r[4] = {1, 0, -1, 0};
        int c[4] = {0, 1, 0, -1};

        for(int i = 0; i < 4; i++){
            int r_ = row + r[i];
            int c_ = col + c[i];

            dfs(grid, r_, c_, vis, n, m);
        }
    }

    int numIslands(vector<vector<char>>& grid) {
        int cnt = 0;
        int n = grid.size();
        int m = grid[0].size();

        vector<vector<int>> vis(n, vector<int> (m, 0));
        
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(grid[i][j] == '1' && vis[i][j] == 0){
                    cnt++;
                    dfs(grid, i, j, vis, n, m);
                }
            }
        }
        
        return cnt;
    }
};
